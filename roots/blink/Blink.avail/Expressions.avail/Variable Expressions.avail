/*
 * Variable Expressions.avail
 * Copyright (c) Todd L Smith and Taylor DH Smith, 2017.
 * All rights reserved.
 */

Module "Variable Expressions"
Uses
	"Abstract Syntax Tree",
	"Avail" = ("variable" → "Avail variable", …)
Names
	/* Variable declaration statements. */
	"(Blink)_is_.",

	/* Ownership expressions. */
	"(Blink)my_"
Body

/******************************************************************************
 *                      Variable declaration statements.                      *
 ******************************************************************************/

/**
 * Declare a {@method "global"} {@type "variable"} with the specified {@type
 * "any's type" type}.
 *
 * @macro "(Blink)_is_."
 * @param "varNamePhrase" "expression phrase ⇒ nonempty string literal"
 * @param "varTypePhrase" "expression phrase ⇒ (any's type)"
 * @returns "sequence phrase"
 */
Public macro "(Blink)_is_." is
[
	varNamePhrase : expression phrase ⇒ nonempty string literal,
	varTypePhrase : expression phrase ⇒ (any's type)
|
	varName ::= evaluate varNamePhrase;
	varType ::= evaluate varTypePhrase;
	var ::= a variable with
		expression type ::= varType,
		variable name ::= varName's value,
		variable scope ::= global,
		variable mutability ::= mutable;
	varStmts ::=
	<
		send $"Method_is_" with
		«<
			‘var's name’,
			«[<‘var’>] : var's type»
		>» : ⊤ → statement phrase
	>;
	varDeclExpr ::= a variable declaration statement with
		expression type ::= ⊤,
		statement scope ::= global,
		declared variable ::= var;
	recordStmts ::= statement recorder for varDeclExpr;
	stmts ::= varStmts ++ recordStmts;
	seq «stmts»
];

/******************************************************************************
 *                           Ownership expression.                            *
 ******************************************************************************/

/**
 * Answer the specified {@type "global variable"}. An ownership expression is a
 * bit of syntactic sugar to make the NL-style syntax nicer.
 *
 * @method "(Blink)my_"
 * @param "var" "global variable"
 * @returns {@param "var"}.
 */
Public method "(Blink)my_" is [var : global variable | var];

/**
 * Strengthen the ownership expression to the exact {@type "global variable"}.
 *
 * @method "(Blink)my_"
 * @restricts "global variable's type"
 */
Semantic restriction "(Blink)my_" is
[
	varType : global variable's type
|
	varType
];

/**
 * Answer the specified {@type "timer"}. An ownership expression is a bit of
 * syntactic sugar to make the NL-style syntax nicer.
 *
 * @method "(Blink)my_"
 * @param "t" "timer"
 * @returns {@param "t"}.
 */
Public method "(Blink)my_" is [t : timer | t];

/**
 * Strengthen the ownership expression to the exact {@type "timer"}.
 *
 * @method "(Blink)my_"
 * @restricts "timer's type"
 */
Semantic restriction "(Blink)my_" is [tType : timer's type | tType];
